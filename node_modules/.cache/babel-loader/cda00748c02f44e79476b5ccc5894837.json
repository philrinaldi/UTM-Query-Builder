{"ast":null,"code":"var _jsxFileName = \"/Users/philiprinaldi/Documents/Repos/utmquerybuilder-react/src/Build.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Inputs } from './Inputs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Build(props) {\n  const concat = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"URL: \", inputs.url, \"Source: \", inputs.source, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 38\n      }, this), \"Medium: \", inputs.medium, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 38\n      }, this), \"Campaign: \", inputs.campaign, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 42\n      }, this), \"Content: \", inputs.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 40\n      }, this), \"Term: \", inputs.term]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    children: [\"URL: \", props.url, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 24\n    }, this), \"Source: \", props.source, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 29\n    }, this), \"Medium: \", props.medium, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 29\n    }, this), \"Campaign: \", props.campaign, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 33\n    }, this), \"Content: \", props.content, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 31\n    }, this), \"Term: \", props.term]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n}\n_c = Build;\n\nvar _c;\n\n$RefreshReg$(_c, \"Build\");","map":{"version":3,"sources":["/Users/philiprinaldi/Documents/Repos/utmquerybuilder-react/src/Build.js"],"names":["React","useState","ReactDOM","Inputs","Build","props","concat","inputs","url","source","medium","campaign","content","term"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,MAAT,QAAuB,UAAvB;;AAEA,eAAe,SAASC,KAAT,CAAgBC,KAAhB,EAAuB;AAGlC,QAAMC,MAAM,GAAG,MAAM;AAEnB,wBACE;AAAA,0BACYC,MAAM,CAACC,GADnB,cAEeD,MAAM,CAACE,MAFtB,eAE6B;AAAA;AAAA;AAAA;AAAA,cAF7B,cAGeF,MAAM,CAACG,MAHtB,eAG6B;AAAA;AAAA;AAAA;AAAA,cAH7B,gBAIiBH,MAAM,CAACI,QAJxB,eAIiC;AAAA;AAAA;AAAA;AAAA,cAJjC,eAKgBJ,MAAM,CAACK,OALvB,eAK+B;AAAA;AAAA;AAAA;AAAA,cAL/B,YAMaL,MAAM,CAACM,IANpB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD,GAZD;;AAcA,sBACE;AAAA,wBACMR,KAAK,CAACG,GADZ,oBACiB;AAAA;AAAA;AAAA;AAAA,YADjB,cAESH,KAAK,CAACI,MAFf,eAEsB;AAAA;AAAA;AAAA;AAAA,YAFtB,cAGSJ,KAAK,CAACK,MAHf,eAGsB;AAAA;AAAA;AAAA;AAAA,YAHtB,gBAIWL,KAAK,CAACM,QAJjB,eAI0B;AAAA;AAAA;AAAA;AAAA,YAJ1B,eAKUN,KAAK,CAACO,OALhB,eAKwB;AAAA;AAAA;AAAA;AAAA,YALxB,YAMOP,KAAK,CAACQ,IANb;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWH;KA5BuBT,K","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Inputs } from './Inputs';\n\nexport default function Build (props) {\n\n   \n    const concat = () => { \n\n      return (\n        <div>\n              URL: {inputs.url}\n              Source: {inputs.source}<br />\n              Medium: {inputs.medium}<br />\n              Campaign: {inputs.campaign}<br />\n              Content: {inputs.content}<br />\n              Term: {inputs.term}\n        </div>\n              )\n    }\n\n    return (\n      <span>\n      URL: {props.url} <br />\n      Source: {props.source}<br />\n      Medium: {props.medium}<br />\n      Campaign: {props.campaign}<br />\n      Content: {props.content}<br />\n      Term: {props.term}\n      </span>\n      )\n \n}\n\n"]},"metadata":{},"sourceType":"module"}